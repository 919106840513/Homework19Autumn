1.
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
struct zf
{
	int r;
	string s;
}b[20];
int getRev(char a[])
{
	int i,j,rev;
	rev=0;
	for(i=0;i<strlen(a);i++)
	{
		for(j=i+1;j<strlen(a);j++)
		{
			if(a[i]>a[j])
			{
				rev++;
			}
		}
	}
	return rev;
}
int main()
{
	char a[20];
	int max,i,j;
	zf tempt;
	scanf("%d/n",&max);
	for(i=0;i<max;i++)
	{
	scanf("%s",a);
	b[i].r=getRev(a);
	b[i].s=a;
	}
	for(i=0;i<max-1;i++)
	{
		for(j=0;j<max-1-i;j++)
		{
			if(b[j].r>=b[j+1].r)
			{
				tempt=b[j+1];
				b[j+1]=b[j];
				b[j]=tempt;
				
			}
		}
	}
	for(i=0;i<max;i++)
	{
		cout<<b[i].s<<" "<<b[i].r<<endl;
		//printf("%s %d/n",b[i].s,b[i].r);
	}
	//cout<<b[0].r<<" "<<b[0].s;
	
	
	return 0;
 } 
2.
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
struct point 
{
	int x; 
	int y;
};
struct Triangle
{
	double a;
	double b;
	double c;
};
double distant(point a,point b)
{
	double s;
	s=sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
	return s;
}
void judgeTriangle(Triangle  t)
{
	if((t.a+t.b)>t.c&&(t.a+t.c)>t.b&&(t.b+t.c)>t.a)
	{
		cout<<"可以构成三角形"; 
	}
	else{
		cout<<"不可以构成三角形"; 
	}
}
double Girth(Triangle  t)
{
	return t.a+t.b+t.c;
}
double Area(Triangle  t)
{
	double area1,s;
	s=(t.a+t.b+t.c)/2;
    area1=sqrt(s*(s-t.a)*(s-t.b)*(s-t.c));
	return area1;
}
int main()
{
	point p1,p2;
	Triangle t;
	cin>>p1.x>>p1.y;
	cin>>p2.x>>p2.y;
	cin>>t.a>>t.b>>t.c;
	cout<<distant(p1,p2)<<endl;
	judgeTriangle(t);
	cout<<endl;
	cout<<Girth(t)<<" "<<Area(t);
}
3.
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
int main()
{
	char a[51];
	cin.getline(a,50);
	printf("%s\n",a);
	for(int i=0;a[i];i++)
	{
		if(a[i]<97)
		{
			a[i]=a[i]+32;
		}
	}
	printf("%s",a);
	return 0;
 } 