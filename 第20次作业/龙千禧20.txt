#include <iostream>
#include <cstring>
using namespace std;
int getRev(char * a){
	int ans=0;
	for(int i=0;a[i+1];++i){
		for(int j=i+1;a[j];++j){
			if(a[i]>a[j])
			ans++;
		}
	}
	return ans;
}
struct abc{
	char a[20];
	int nx;
};
abc b[12345];
void getrev(abc * t,int n){
	
	for(int i=0;i<n;++i){
		t[i].nx=getRev(t[i].a);
	}
	for(int i=0;i<n-1;++i){
		for(int j=0;j<n-i-1;++j){
			if(t[j].nx>t[j+1].nx){
				abc temp;
				temp=t[j];
				t[j]=t[j+1];
				t[j+1]=temp;
			}
		}
	}
}
int main()
{
	int max;
	cin>>max;
	char a[]="DAABEC";
	cout<<getRev(a)<<endl; 
	for(int i=0;i<max;++i)
	cin.getline(b[i].a,20);
	getrev(b,max);
	for(int i=0;i<max;++i)
	cout<<b[i].a<<' '<<b[i].nx<<endl;
	return 0;
}

//（4）
#include <iostream>
#include <cstring>
using namespace std;
struct node{
	char * str;
	int cs;
};
int main()
{
	int n;
	char *s;
	cin>>n;
	getchar();
	node * q=new node [n+1];
	int sum=0;
	for(int i=0;i<n;++i){
		cin.getline(s,100);
		//cout<<s<<endl;
		for(int j=0;j<sum;++j){
			if(strcmp(q[j].str,s)==0){
				q[j].cs++;
				s[0]=0;
				break;
			}
		}
		if(s[0]){
			q[sum].str=new char [strlen(s)];
			q[sum].cs=1;
			strcpy(q[sum].str,s);
			sum++;
		}
	} 
	for(int i=0;i<sum-1;++i){
		for(int j=0;j<sum-1;++j){
			if(q[j].cs<q[j+1].cs){
			node te=q[j];
			q[j]=q[j+1];
			q[j+1]=te;
		}
		}
		
	}
	for(int i=0;i<sum;++i){
		cout<<q[i].str<<' '<<q[i].cs<<endl;
	}
	return 0;
}

