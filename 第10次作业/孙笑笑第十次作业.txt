2.
#include <iostream>
using namespace std;
#include <stdlib.h>
void getRandom(int a[], int n)
{
	  srand(a[0]);	//设置随机数发生器的种子
    for(int i = 0; i < n; i++)
		a[i] = rand() % 100;	//100以内的随机数
}
void printArray(int data[], int n){
	for(int i = 0; i < n; i++)		
		cout<<data[i]<<'\t';			
	cout<<endl;
}

int getMax( int a[], int n)
{
int j, temp,c=0;
		for(j = 1; j < n-1; j++)
			if(a[c] < a[j])
			{
				c=j; 
					
            }
return c;
			}
int main()
{ const int n=9;
int a[n+1];
getRandom(a,n+1);
printArray(a, n+1);
cout<<getMax(a,n+1);
}
5.
#include <iostream>
using namespace std;
bool isPrime(int n){
	if(n<2) return false;
	if(n==2) return true;
	for(int i=2;i*i<=n;i++)
	   if(n%i==0)
	     return false;
	return true;
}
long int SUM(long int y)
{
	int sum1=0;
	while(y!=0)
	{sum1+=y%10;
	y/=10;
	}return sum1;}
long int factor(long int x)
{int sum=0;
int i=2;
do{while(x%i==0)
{x/=i;
sum+=SUM(i);}i++;
}while(x!=1);
return sum;
}
bool isSmith(int n)
{long int m;
m=n;
	if(factor(m)==SUM(m))
	return true;
	else return false;
	}
int main(){
			long int p=4937774;
		int count=0;
		for(p;p<5000000;p++)
	if(isSmith(p))
	{count++;
	cout<<p<<endl;
	if(count==1)
	break;
	}
	long int n; 
	while(1){
	cout<<"输入非素数:";
	cin>>n;
		if(n==0)
		break;
	if(isPrime(n)==1)
	{cout<<"input n error"<<endl;
	continue;}
    if(isPrime(n)!=1)
      {if(isSmith(n))
	    cout<<n<<"是Smith数?;
	    else cout<<"input n error"; }
	    cout<<'\n';}
}
10.
#include <iostream>
using namespace std;
int f(int a[],int x)
{
	int n=0,i,j;
	for(n;n<x-1;n++)
	a[n]=n+1;
	for (a,n=0,i=0,j;i<x-1;)
	{if(a[n])
		{j=n;
		if(a[n]%5==0)
		{do n>x-2?n=0:n++;
	while (!a[n]);
	if (n==j)break;
    a[n]=a[j]+1;
	a[j]=0;
	}
	    else
	  {do n>x-2?n=0:n++;
	while (!a[n]);
	if (n==j)break;
    a[n]=a[j]+1;}
	i=0;
     }
	else {i++;/*??0?????*/
	n>x-2?n=0:n++;}}
	cout<<n+1;

}
int main ()
{
     int n=20;
	int a[n+1];
    f(a,n+1);
	return 0;
}