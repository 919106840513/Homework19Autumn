#include<iostream>
using namespace std;
struct Fraction{
	int a,b;
};
void change(Fraction *x){
	for(int i=2;i<=x->a;i++){
		if(x->a%i==0&&x->b%i==0){
			x->a=x->a/i;
			x->b=x->b/i;
		}
	}
	cout<<x->a<<"/"<<x->b<<endl;
}

void judge(Fraction *x,Fraction *y){
	if(x!=NULL&&y!=NULL){
		double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		if(c>d)
		cout<<x->a<<"/"<<x->b<<">"<<y->a<<"/"<<y->b<<endl;
		else if(c<d)
		cout<<y->a<<"/"<<y->b<<">"<<x->a<<"/"<<x->b<<endl;
		else
		cout<<y->a<<"/"<<y->b<<"same"<<endl;
	}
}
double plu(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c+d;
}
double min(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c-d;
}
double mul(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c*d;
}
double div(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c/d;
}
int main(){
	Fraction m,n;
	cin>>m.a>>m.b>>n.a>>n.b;
	change(&m);
	change(&n);
	if(m.b>0&&n.b>0){
	judge(&m,&n);
	cout<<plu(&m,&n)<<endl;
	cout<<min(&m,&n)<<endl;
	cout<<mul(&m,&n)<<endl;
	cout<<div(&m,&n)<<endl;
	}
	return 0;
}


#include<iostream>
using namespace std;
	enum type{percent,level};
struct Course{
	char CID[20];
	char Cname[20];
     type a1;
}; 
union kaohechengji{
	float x;
	char y[2];
};
struct xueshenggrades{
	char xuehao[20];
	char xueshengname[20];
	Course c1;
	kaohechengji m1;

};
 void PrintAGrade(xueshenggrades *m){
 	if(m==NULL) return ;
 	cout<<m->xuehao<<"  "<<m->xueshengname<<"  "<<m->c1.CID<<"  "<<m->c1.Cname<<" "<<m->c1.a1<<" ";
 	if(m->c1.a1==0)
 	cout<<m->m1.x<<endl;
 	else
 	cout<<m->m1.y[2]<<endl;


 }

 int main(){
 	xueshenggrades a={"123","Tom",{"0001","Math"},{90.0}};
 	xueshenggrades b={"124","Jerry",{"0002","CPP"},{'A'}};
 	PrintAGrade(&a);
 	PrintAGrade(&b);

 	return 0;
 } 