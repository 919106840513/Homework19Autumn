3
#include<iostream>
using namespace std;
struct Fraction{
	int a,b;
};
void change(Fraction *x){
	for(int i=2;i<=x->a;i++){
		if(x->a%i==0&&x->b%i==0){
			x->a=x->a/i;
			x->b=x->b/i;
		}
	}
	cout<<x->a<<"/"<<x->b<<endl;
}

void judge(Fraction *x,Fraction *y){
	if(x!=NULL&&y!=NULL){
		double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		if(c>d)
		cout<<x->a<<"/"<<x->b<<">"<<y->a<<"/"<<y->b<<endl;
		else if(c<d)
		cout<<y->a<<"/"<<y->b<<">"<<x->a<<"/"<<x->b<<endl;
		else
		cout<<y->a<<"/"<<y->b<<"same"<<endl;
	}
}
double plu(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c+d;
}
double min(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c-d;
}
double mul(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c*d;
}
double div(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c/d;
}
int main(){
	Fraction m,n;
	cin>>m.a>>m.b>>n.a>>n.b;
	change(&m);
	change(&n);
	if(m.b>0&&n.b>0){
	judge(&m,&n);
	cout<<plu(&m,&n)<<endl;
	cout<<min(&m,&n)<<endl;
	cout<<mul(&m,&n)<<endl;
	cout<<div(&m,&n)<<endl;
	}
	return 0;
}


4.
#include <iostream>
 #include <string.h>
 using namespace std;
 enum type{percent,level};
 struct Course{
    char num[20];
 	char course_name[10];
 	type t;		
 };
 union mark{
 	int a;
 	char ch;
 };
 struct grade{
 	char stnum[20];
 	char name[10];
 	Course l;
 	mark m;
    grade(char cc[],char n[],char serialnum[],type t,char x){
      strcpy(stnum,cc);
 	  strcpy(name,n);
   	  strcpy(l.num,serialnum);
 	  l.t=t;
      if(t==0)
 		m.a=(int)x;
 	  else
 		m.ch=x;
 	}	
 };
 void de(grade a){
 	cout<<a.stnum<<" "<<a.name<<" "<<a.l.num<<" "<<a.l.t<<" ";
 	if(a.l.t==0)
 		cout<<a.m.a<<endl;
 	else
 		cout<<a.m.ch<<endl;
 }
 int main(){
     grade a("001","AA","567",level,'A');
     grade b("056","BB","256",percent,90);
 	de(a);
 	de(b);
 } 