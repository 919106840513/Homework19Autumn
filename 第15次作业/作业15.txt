3.
#include<iostream>
using namespace std;
struct Fraction{
	int a,b;
};
void change(Fraction *x){
	for(int i=2;i<=x->a;i++){
		if(x->a%i==0&&x->b%i==0){
			x->a=x->a/i;
			x->b=x->b/i;
		}
	}
	cout<<x->a<<"/"<<x->b<<endl;
}

void judge(Fraction *x,Fraction *y){
	if(x!=NULL&&y!=NULL){
		double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		if(c>d)
		cout<<x->a<<"/"<<x->b<<">"<<y->a<<"/"<<y->b<<endl;
		else if(c<d)
		cout<<y->a<<"/"<<y->b<<">"<<x->a<<"/"<<x->b<<endl;
		else
		cout<<y->a<<"/"<<y->b<<"same"<<endl;
	}
}
double plu(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c+d;
}
double min(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c-d;
}
double mul(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c*d;
}
double div(Fraction *x,Fraction *y){
	double c,d;
		c=(double)x->a/x->b;
		d=(double)y->a/y->b;
		return c/d;
}
int main(){
	Fraction m,n;
	cin>>m.a>>m.b>>n.a>>n.b;
	change(&m);
	change(&n);
	if(m.b>0&&n.b>0){
	judge(&m,&n);
	cout<<plu(&m,&n)<<endl;
	cout<<min(&m,&n)<<endl;
	cout<<mul(&m,&n)<<endl;
	cout<<div(&m,&n)<<endl;
	}
	return 0;
}
4.
#include<iostream>
#include<iomanip>
using namespace std;
struct Course{
	char ID[10];
	char name[20];
	enum ways{
		percent,
		rank
	};
};

union TestGrade{
	int m;
	char t[2];
	};
struct Grade{
	char SID[20];
	char name1[10];
	char IDc[10];
	Course c1;
	TestGrade T;
};
void PrintAnCourse(Course *m){
	if(m!=NULL)
	cout<<setw(5)<<m->ID<<setw(5)<<m->name<<endl;
}
void PrintAnGrade(Grade *m){
	if(m==NULL) return ;
	cout<<setw(5)<<m->IDc<<setw(5)<<m->name1<<setw(5)<<m->SID;
	PrintAnCourse(&m->c1);
	
}

int main(){
	Grade l={"123","Tom","1234",{"1","Math"},{1}};
	PrintAnGrade(&l);
	return 0;
} 