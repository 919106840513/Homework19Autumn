1
#include<iostream> 
#include<math.h>
using namespace std;
struct result{
	float x1,x2;
	int type;
}; 
result f(int a,int b,int c){
	result m;
	if(b*b-4*a*c<0){
		m.type=1;
	}
	else if(b*b-4*a*c==0){
		m.type=2;
	}
	else{
		m.type=3;
	}
	double delta;
	delta=sqrt((double)b*b-4*a*c);
	m.x1=(0.5/a)*(-b+delta);
	m.x2=(0.5/a)*(-b-delta);
	return m;
}
int main(){
	int a,b,c;
	cin>>a>>b>>c;
	result s=f(a,b,c);
	if(s.type==1){
		cout<<"方程无实数根"<<endl; 
	}
	else if(s.type==2){
		cout<<"x1=x2= "<<s.x1<<endl; 
	}
	else{
		cout<<"x1="<<s.x1<<"  x2="<<s.x2<<endl; 
	}
}
2
#include<iostream> 
#include<math.h>
using namespace std;
struct Point{
	int x1,y1,x2,y2;
	double dis;
};
struct Tri{
	int x1,y1,x2,y2,x3,y3;
	bool istri;
	double cir,area;
};
double figure(int x1,int y1,int x2,int y2){
	return sqrt((double)((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)));
}
bool ist(int a,int b,int c){
	if((a+b>c&&abs(a-b<c))||(a+c>b&&abs(a-c<b))||(c+b>a&&abs(b-a<a))){
		return true;
	}
	return false;
}
Point dis(){
	Point s;
	cout<<"请分别输入两个点x、y坐标"<<endl;
	cin>>s.x1>>s.y1>>s.x2>>s.y2; 
	s.dis=figure(s.x1,s.y1,s.x2,s.y2);
	return s;
}
Tri istriaa(){
	Tri t;
	cout<<"请分别输入三个点x、y坐标"<<endl;
	cin>>t.x1>>t.y1>>t.x2>>t.y2>>t.x3>>t.y3;
	double a=figure(t.x1,t.y1,t.x2,t.y2);
	double b=figure(t.x1,t.y1,t.x3,t.y3);
	double c=figure(t.x3,t.y3,t.x2,t.y2);
	t.istri=ist(a,b,c);
	t.cir=a+b+c;
	double p=0.5*(a+b+c);
    t.area=sqrt(p*(p-a)*(p-b)*(p-c));
	return t;
}
int main(){
	Point mm=dis();
	cout<<"两个点之间距离："<<mm.dis<<endl;
	Tri nn=istriaa();
	if(nn.istri==0){
		cout<<"不能构成三角形"<<endl;
	}
	else{
		cout<<"三角形周长 :"<<nn.cir<<" 三角形面积 ："<<nn.area<<endl;
	}
}
3
#include <iostream>
 using namespace std;
 int main (){
 	int n=5;
 	char a[n];
 	cin.getline(a,n);
 	cout<<a;
 	cout<<endl;
 		for (int i=0;i<n;i++){

 			a[i]=a[i]-32;
 			cout<<a[i];

 	}
 	return 0;

 }