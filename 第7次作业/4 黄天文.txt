#include<bits/stdc++.h>
using namespace std;
int main()
{
  long int i,x;
  int bonus1,bonus2,bonus4,bonus6,bonus10,bonus;
  scanf("%ld",&i); 
  bonus1=100000*0.1;
  bonus2=bonus1+100000*0.75;
  bonus4=bonus2+200000*0.5;
  bonus6=bonus4+200000*0.3;
  bonus10=bonus6+400000*0.15;
  if(i<=100000)
  x=1;
    
    else if(i<=200000)
    x=2;
      
        else if(i<=400000)
        x=3;
          
            else if(i<=600000)
            x=4;
              
                else if(i<=1000000)
                x=5;
                  
                    else
                    x=6;
                      
    switch(x){
    	case 1:
    	    bonus=i*0.1;	
    	    break;
    	case 2:
    		bonus=bonus1+(i-100000)*0.075;
    		break;
    	case 3:
    		bonus=bonus2+(i-200000)*0.05;
    		break;
    	case 4:
    		bonus=bonus4+(i-400000)*0.03;
    		break;
    	case 5:
    	    bonus=bonus6+(i-600000)*0.015;
    	    break;
    	case 6:
    		bonus=bonus10+(i-1000000)*0.01;
    		break;
	}
  cout<<"bonus="<<bonus;
}
2.
#include<bits/stdc++.h>
using namespace std;
int main()
{
  int i,j,k,n;
  cout<<"'water flower'number is:";
  for(n=100;n<1000;n++)
  {
    i=n/100;/*分解出百位*/
    j=n/10%10;/*分解出十位*/
    k=n%10;/*分解出个位*/
    if(i*100+j*10+k==i*i*i+j*j*j+k*k*k)
      cout<<n<<" ";
  }
}
3.
#include<bits/stdc++.h>
using namespace std;
int gys(int m,int n)
{
	if(m%n==0)
    return n;
    else
    return gys(n,m%n);	 
}
int gps(int m,int n)
{
	int x=gys(m,n);
	return (m*n)/x;
}
int main(){
	int m,n;
	cin>>m>>n;
	cout<<"最大公约数为："<<gys(m,n)<<" 最小公倍数为："<<gps(m,n); 
	return 0;
}
4.
#include<bits/stdc++.h>
using namespace std;
int main()
{
	int n,m,i,j;
	cin>>n>>m;
	for(j=1;j<=n;j++)
	{
			for(i=0;i<j-1;i++)
	{
		cout<<" ";
	}
	for(i=0;i<m;i++)
	{
		cout<<"*";
	}
	cout<<endl;
	}
	cout<<endl;
	for(j=n;j>=1;j--)
	{
			for(i=0;i<j-1;i++)
	{
		cout<<" ";
	}
	for(i=0;i<m;i++)
	{
		cout<<"*";
	}
	cout<<endl;
	}
return 0;
}