2.
#include <iostream>
using namespace std;
int main()
{
	 long int i;
  int bonus1,bonus2,bonus4,bonus6,bonus10,bonus;
  cin>>i; 
  bonus1=100000*0.1;
  bonus2=bonus1+100000*0.075;
  bonus4=bonus2+200000*0.05;
  bonus6=bonus4+200000*0.03;
  bonus10=bonus6+400000*0.015;
  switch (i/100000){
  case  0: cout<<" bonus="<<i*0.1;
           break;
  case  1: cout<< " bonus="<<bonus1+(i-100000)*0.075;
           break;
  case  2: cout<<"bonus="<<bonus2+(i-200000)*0.05;
           break;
  case  3: cout<<"bonus="<<bonus2+(i-200000)*0.05;
           break;       
  case  4: cout<<"bonus="<<bonus4+(i-400000)*0.03;
           break;
  case  5: cout<<"bonus="<<bonus4+(i-400000)*0.03;
           break;
  case  6: cout<<"bonus="<<bonus6+(i-600000)*0.015;
           break;
   case  7: cout<<"bonus="<<bonus6+(i-600000)*0.015;
           break;  
  case  8: cout<<"bonus="<<bonus6+(i-600000)*0.015;
           break;      
  case  9: cout<<"bonus="<<bonus6+(i-600000)*0.015;
           break;
  default: cout<<"bonus="<<bonus10+(i-1000000)*0.01;
           break;
}	
}
13.
#include <iostream>
using namespace std;

int main()
{
	int a,b,c,i,j=0;
	
	for(i=100;i<=999;i++)
	 {
	 a=i%10;
	 b=(i/10)%10;
	 c=i/100;
	 if(i==a*a*a+b*b*b+c*c*c)
	  {
	  cout<<i<<' ';
	  j++;
	  if(j%2==0)
	  cout<<endl;
      }
     }
16.
#include <iostream>
using namespace std;
void fun_yinshu(int a,int b)
{
    int i;
	for(i=1;;i++)
	{if((a*i)%b==0)
	break;
	}
	 cout<<"最小公倍数="<<a*i<<endl ;
} 
void fun_beishu(int a,int b)
{
	int j;
	for(j=a;;j--)
	{if(!((a%j)||(b%j))) 
	break;
	}
	cout<<"最大公约数="<<j; 
	
	
}
int main()
{
	int a,b;
	cin>>a>>b;
	fun_yinshu(a,b);
	fun_beishu(a,b);
}
 23.
#include <iostream>
using namespace std;
int main()
{
	int a,b;
	int i,j,k;
	cin>>a>>b;
	for(i=1;i<=b;i++)
	{
		for(j=1;j<i;j++)
		cout<<' ';
		for(k=1;k<=a;k++)
		cout<<'*';
		cout<<endl;
	}
	cout<<endl;
	for(i=b;i>0;i--)
	{
		for(j=1;j<i;j++)
		cout<<' ';
		for(k=1;k<=a;k++)
		cout<<'*';
		cout<<endl;			
	}	
 } 	
	
	